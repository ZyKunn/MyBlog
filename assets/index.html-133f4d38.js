import{_ as e,r as o,o as c,c as l,a as n,e as t,w as p,b as s,d as u}from"./app-a153c100.js";const i="/MyBlog/assets/1606459512766-71bc82d8.png",k="/MyBlog/assets/1606459540335-e804c8e3.png",m="/MyBlog/assets/1606459555540-d489b943.png",r="/MyBlog/assets/1606459581448-940d8e5e.png",d="/MyBlog/assets/1606459600128-e15b812d.png",v="/MyBlog/assets/1606459619859-88008006.png",b="/MyBlog/assets/1606459635300-7501c2c4.png",f="/MyBlog/assets/1606459650360-dbf33ff8.png",g="/MyBlog/assets/1606459677559-e89b7c8d.png",h={},S=n("h1",{id:"_09-jdk8-新特性-二-总结",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_09-jdk8-新特性-二-总结","aria-hidden":"true"},"#"),s(" 09 - JDK8 新特性(二)&总结 🎢")],-1),q={class:"table-of-contents"},y=u(`<h2 id="streamapi-补充" tabindex="-1"><a class="header-anchor" href="#streamapi-补充" aria-hidden="true">#</a> StreamAPI 补充</h2><h3 id="set-集合-streamapi-使用" tabindex="-1"><a class="header-anchor" href="#set-集合-streamapi-使用" aria-hidden="true">#</a> Set 集合 StreamAPI 使用</h3><p>set 集合和 List 集合都是从 Collection 继承而来的单例集合，因此 StreamAPI 使用方式是一致的：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;css&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;javascript&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;Spring&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;summerSpring&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;springMVC&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;SpringBoot&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;ajax&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;mybatis&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;mybatis&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

set<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>											<span class="token comment">//1.获取流</span>
    <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>s<span class="token operator">-&gt;</span>s<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;spring&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>		<span class="token comment">//2.中间处理   过滤所有包含&quot;spring&quot;单词的数据（不区分大小写）</span>
    <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>s<span class="token operator">-&gt;</span>s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">6</span><span class="token punctuation">)</span>							<span class="token comment">//3.中间处理	过滤所有长度超过6位的</span>
    <span class="token punctuation">.</span><span class="token function">sorted</span><span class="token punctuation">(</span><span class="token punctuation">)</span>											<span class="token comment">//4.中间处理	使用元素的自然顺序（comparable）排序</span>
    <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>						<span class="token comment">//5.结尾处理	迭代</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="map-集合的-streamapi-使用" tabindex="-1"><a class="header-anchor" href="#map-集合的-streamapi-使用" aria-hidden="true">#</a> Map 集合的 StreamAPI 使用</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;html&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;HyperText Markup Language&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;css&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Cascading Style Sheets&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;js&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;JavaScript&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;bs&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Bootstrap&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;ssh&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Spring Struts2 Hibernate&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;ssm&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Spring SpringMVC Mybatis&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;xml&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Extension markup Language&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//map.forEach((k,v)-&gt;System.out.println(k+&quot;--&gt;&quot;+v));</span>

    <span class="token comment">//stream 不能对双链集合 进行处理 所以 可以把map转换成set集合</span>
    <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Entry</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> entrySet <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//将map集合转化成 装有entry对象的set集合  利用stream进行流式处理</span>
    <span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Entry</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> stream <span class="token operator">=</span> entrySet<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//不区分大小写 取出包含s的Key</span>
    stream<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>e<span class="token operator">-&gt;</span>e<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment">//根据Value的长度来进行排序</span>
        <span class="token punctuation">.</span><span class="token function">sorted</span><span class="token punctuation">(</span><span class="token punctuation">(</span>s1<span class="token punctuation">,</span>s2<span class="token punctuation">)</span><span class="token operator">-&gt;</span>s1<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>s2<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment">//过滤出key长度大于等于三的</span>
        <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>e<span class="token operator">-&gt;</span>e<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;=</span><span class="token number">3</span><span class="token punctuation">)</span>
        <span class="token comment">//跳过两条数据</span>
        <span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token comment">//截取两条数据</span>
        <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token comment">//映射 取出所有值 形成为新的Stream</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>e<span class="token operator">-&gt;</span>e<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment">//收集将新的stream中的元素转换成新的list集合</span>
        <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment">//foreach打印entry对象 因为这个set流本身存的就是entry对象</span>
        <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>f<span class="token operator">-&gt;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="新增日期类-localdate-localtime-localdatetime" tabindex="-1"><a class="header-anchor" href="#新增日期类-localdate-localtime-localdatetime" aria-hidden="true">#</a> 新增日期类(LocalDate/LocalTime/LocalDateTime)</h2><p>之前常用类中，已经对于一些常见的日期处理类有所了解：</p><ul><li>java.util.Date <ul><li>java.sql.Date</li><li>java.sql.Time</li><li>java.sql.Timestamp</li></ul></li><li>java.util.Calendar</li><li>java.text.DateFormat/java.text.SimpleDateFormat</li></ul><p>以上的日期处理存在一些缺陷，比如月份从 0 开始，可读性不好，以及日期格式化处理 DateFormat 是一个线程不安全的工具类,因此在多线程并发操作时需要为每一个线程单独创建实例，否则可能出现共享导致结果不一致的情况。</p><p>从 java8 开始，JDK 引进了新的日期类，用于对于日期时间提供更为简洁，以及更为安全操作，新的日期处理类位于<code>java.time</code>包下；主要包含以下类：</p><ul><li>java.time.LocalDate(日期)</li><li>java.time.LocalTime(时间)</li><li>java.time.LocalDateTime(日期时间)</li><li>java.time.format.DateTimeFormatter(对日期时间格式化工具类)</li></ul><h3 id="localdate" tabindex="-1"><a class="header-anchor" href="#localdate" aria-hidden="true">#</a> LocalDate</h3><p>LocalDate 类用于表示一个标准格式日期，通常以 yyyy-MM-dd 格式显示（如:2020-07-07）,LocalDate 的使用方法：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//获取当前系统时间所表示的日期对象</span>
<span class="token class-name">LocalDate</span> date <span class="token operator">=</span> <span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//获取年份</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>datetime<span class="token punctuation">.</span><span class="token function">getYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//获取月</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getMonthValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取月份的整数值1-12</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取月份枚举(列举)值</span>

<span class="token comment">//获取日</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getDayOfYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getDayOfMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getDayOfWeek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getDayOfWeek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//根据指定的日期构建一个LocalDate对象</span>
<span class="token class-name">LocalDate</span> date2 <span class="token operator">=</span> <span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="localtime" tabindex="-1"><a class="header-anchor" href="#localtime" aria-hidden="true">#</a> LocalTime</h3><p>LocalTime 类用于表示一个标准格式时间，通常以 HH:mm:ss.SSS 格式显示（如:11:22:33.354）,LocalTime 的使用方法：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">LocalTime</span> time <span class="token operator">=</span> <span class="token class-name">LocalTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//获取时</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">getHour</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//获取分</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">getMinute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//获取秒</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">getSecond</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//获取毫秒</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">toInstant</span><span class="token punctuation">(</span><span class="token class-name">ZoneOffset</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;+8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toEpochMilli</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//根据指定的日期构建一个LocalTime对象</span>
<span class="token class-name">LocalTime</span> time <span class="token operator">=</span> <span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="localdatetime" tabindex="-1"><a class="header-anchor" href="#localdatetime" aria-hidden="true">#</a> LocalDateTime</h3><p>LocalDateTime 类用于表示一个标准日期时间格式，通常以 yyyy-MM-ddTHH:mm:ss.SSS 格式显示（如:2020-08-07T18:18:18）,LocalDateTime 的使用方法：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">LocalDateTime</span> time <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//将LocalDateTime 转换为 LocalDate</span>
<span class="token class-name">LocalDate</span> localDate <span class="token operator">=</span> time<span class="token punctuation">.</span><span class="token function">toLocalDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">LocalTime</span> localTime <span class="token operator">=</span> time<span class="token punctuation">.</span><span class="token function">toLocalTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>localDate<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>localTime<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//根据指定的日期构建一个LocalDateTime对象</span>
<span class="token class-name">LocalDateTime</span> time <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="datetimeformatter" tabindex="-1"><a class="header-anchor" href="#datetimeformatter" aria-hidden="true">#</a> DateTimeFormatter</h3><p>DateTimeFormatter 是 jdk8 新增 java.time 包中的一个用于对 LocalDate,LocalTime,LocalDateTime 进行格式化和解析的解析类，内部体提供一些内置的格式化方式，比如:</p><ul><li>BASIC_ISO_DATE</li><li>ISO_DATE</li><li>ISO_INSTANT</li><li>ISO_LOCAL_DATE</li></ul><p>同时该类还支持自定义的格式化匹配模式，通过以下方法获得：</p><ul><li>ofPattern(String pattern)</li></ul><p>例如:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//获取系统时间：2020-07-08T09:47:37.862</span>
<span class="token class-name">LocalDateTime</span> datetime <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//需要将以上类型的日期时间转换为自定义格式的字符串</span>
<span class="token comment">//创建一个格式化解析对象</span>
<span class="token class-name">DateTimeFormatter</span> fmt <span class="token operator">=</span> <span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span><span class="token function">ofPattern</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy年MM月dd日 HH时mm分ss秒&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//需要使用以上格式对日期时间格式化包含两种方式</span>
<span class="token comment">//方法1：</span>
<span class="token class-name">String</span> time <span class="token operator">=</span> fmt<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>datetime<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//方法2:</span>
<span class="token class-name">String</span> time2 <span class="token operator">=</span> datetime<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>fmt<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//以上两种方式获取的字符串日期格式一致的，均为：</span>
<span class="token comment">//2020年07月08日 09时47分37秒</span>

<span class="token class-name">String</span> t <span class="token operator">=</span> <span class="token string">&quot;2020年07月08日 09时33分21秒&quot;</span><span class="token punctuation">;</span> <span class="token comment">// String --&gt; LocalDateTime</span>
<span class="token comment">//将String类型日期时间解析为LocalDateTime对象</span>
dateTime <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> fmt<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>dateTime<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;20200708101211&quot;</span><span class="token punctuation">,</span><span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span><span class="token function">ofPattern</span><span class="token punctuation">(</span><span class="token string">&quot;yyyyMMddHHmmss&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//		System.out.println(LocalDate.parse(&quot;20200708&quot;,DateTimeFormatter.BASIC_ISO_DATE));</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意事项:</p><p>与 DateFormat 和 SimpleDateFormat 的区别在于，DateTimeFormatter 是线程安全的实现，在多线程并发的时候可以让多个线程使用同一当前实例，能保证数据的一致性；但是 DateFormat 是线程非安全实现，因此在多线程并发时，需要为每个线程单独创建该实例。</p></blockquote><h2 id="java-基础与面向对象总结" tabindex="-1"><a class="header-anchor" href="#java-基础与面向对象总结" aria-hidden="true">#</a> java 基础与面向对象总结</h2><p><img src="`+i+'" alt="1606459512766"></p><p><img src="'+k+'" alt="1606459540335"></p><p><img src="'+m+'" alt="1606459555540"></p><p><img src="'+r+'" alt="1606459581448"></p><p><img src="'+d+'" alt="1606459600128"></p><p><img src="'+v+'" alt="1606459619859"></p><p><img src="'+b+'" alt="1606459635300"></p><p><img src="'+f+'" alt="1606459650360"></p><p><img src="'+g+'" alt="1606459677559"></p>',39);function D(L,T){const a=o("router-link");return c(),l("div",null,[S,n("nav",q,[n("ul",null,[n("li",null,[t(a,{to:"#streamapi-补充"},{default:p(()=>[s("StreamAPI 补充")]),_:1}),n("ul",null,[n("li",null,[t(a,{to:"#set-集合-streamapi-使用"},{default:p(()=>[s("Set 集合 StreamAPI 使用")]),_:1})]),n("li",null,[t(a,{to:"#map-集合的-streamapi-使用"},{default:p(()=>[s("Map 集合的 StreamAPI 使用")]),_:1})])])]),n("li",null,[t(a,{to:"#新增日期类-localdate-localtime-localdatetime"},{default:p(()=>[s("新增日期类(LocalDate/LocalTime/LocalDateTime)")]),_:1}),n("ul",null,[n("li",null,[t(a,{to:"#localdate"},{default:p(()=>[s("LocalDate")]),_:1})]),n("li",null,[t(a,{to:"#localtime"},{default:p(()=>[s("LocalTime")]),_:1})]),n("li",null,[t(a,{to:"#localdatetime"},{default:p(()=>[s("LocalDateTime")]),_:1})]),n("li",null,[t(a,{to:"#datetimeformatter"},{default:p(()=>[s("DateTimeFormatter")]),_:1})])])]),n("li",null,[t(a,{to:"#java-基础与面向对象总结"},{default:p(()=>[s("java 基础与面向对象总结")]),_:1})])])]),y])}const j=e(h,[["render",D],["__file","index.html.vue"]]);export{j as default};
