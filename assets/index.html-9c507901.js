import{_ as i,r as t,o,c as p,a,e,w as l,b as n,d as c}from"./app-a153c100.js";const d="/MyBlog/assets/1603778806166-8535a10b.png",r="/MyBlog/assets/1603785180159-1a4d4570.png",u="/MyBlog/assets/1603785486863-6705c666.png",v="/MyBlog/assets/1603786711418-181d471f.png",h="/MyBlog/assets/1603791187660-da222ae0.png",k={},m=a("h1",{id:"_01-进入-java-的世界",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_01-进入-java-的世界","aria-hidden":"true"},"#"),n(" 01 - 进入 Java 的世界 🎉")],-1),b={class:"table-of-contents"},g=c(`<h2 id="java-概述" tabindex="-1"><a class="header-anchor" href="#java-概述" aria-hidden="true">#</a> Java 概述</h2><h3 id="java-是什么" tabindex="-1"><a class="header-anchor" href="#java-是什么" aria-hidden="true">#</a> Java 是什么？</h3><p>语言：与人(或者其他对象)交流</p><p>编程语言:跟计算机交流</p><p>从机器语言--&gt;汇编语言---&gt;C 语言(面向过程)--&gt;C++(半面对象语言)--&gt;Java(纯面向对象)</p><p>桑子明来教室学习</p><p>面向过程：</p><p>所在地-&gt;出门-&gt;坐上交通工具-&gt;到楼下--&gt;上楼-&gt;进教室</p><p>面向对象:</p><p>赵元坤.学习(交通工具)</p><h3 id="java-可以做什么" tabindex="-1"><a class="header-anchor" href="#java-可以做什么" aria-hidden="true">#</a> Java 可以做什么？</h3><ul><li>游戏开发</li><li>桌面软件</li><li><strong>网站开发</strong></li><li><strong>手机软件开发(Android)</strong></li><li><strong>大型软件服务端开发(抖音，头条，支付宝，健康码)</strong></li><li><strong>大数据开发</strong></li><li><strong>嵌入式系统开发</strong></li></ul><h3 id="java-的发展史" tabindex="-1"><a class="header-anchor" href="#java-的发展史" aria-hidden="true">#</a> Java 的发展史？</h3><p>1990 初期，Green 计划成立</p><p>1995 年，Java 正式发布，免费开源</p><p>1998 年 12 月，Jdk1.2 发布，同时发布 JSP/Servlet，将 java 分为三个版本：<strong>J2SE（java 标准版本）</strong>、J2ME（java 微系统版本）、<strong>J2EE（java 企业级版本）</strong></p><p>2004 年 10 月，JDK1.5 发布，将三个版本重新命名:JavaSE、JavaME、JavaEE.</p><blockquote><p>版本发布：</p><p>长期支持版(LTS)：java8、java11 每三年发布一个长期支持版</p><p>非长期支持: 每六个月一次更新</p></blockquote><h3 id="java-的学习路线" tabindex="-1"><a class="header-anchor" href="#java-的学习路线" aria-hidden="true">#</a> Java 的学习路线？</h3><ol><li><strong>java 基础语法</strong></li><li>面向对象编程</li><li>常用类和集合框架</li><li>java 高级</li><li>数据库与数据库编程</li><li>web 前端技术</li><li>Javaweb 基础(服务器，servlet 与动态网页技术)</li><li>框架技术(SSM、SpringBoot)</li><li>微服务与分布式（SpringCloud）</li></ol><h2 id="开发环境配置" tabindex="-1"><a class="header-anchor" href="#开发环境配置" aria-hidden="true">#</a> 开发环境配置</h2><h3 id="安装-jdk-jre" tabindex="-1"><a class="header-anchor" href="#安装-jdk-jre" aria-hidden="true">#</a> 安装 JDK&amp;JRE</h3><ul><li>JDK：java 开发工具集，包含一系列用于操作 java 程序，字节码文件的工具，比如编译工具，文档工具，打包工具等</li><li>JRE：java 运行环境，主要包含的用于支持 java 程序运行的类库，Java 虚拟机(JVM)</li></ul><h3 id="环境变量配置" tabindex="-1"><a class="header-anchor" href="#环境变量配置" aria-hidden="true">#</a> 环境变量配置</h3><p>环境变量，为了告诉其他需要基于 java 环境运行的软件，jdk 所在的路径；以及可以快捷的通过 cmd 操作 java 相关的工具</p><p>环境变量配置分为两步:</p><ol><li>配置 JAVA_HOME:JDK 所在的安装路径（默认位置:C:\\Program Files\\Java\\jdk1.8.0_101）</li><li>配置 Path：JDK 所在的安装路径的 bin 目录(默认位置:%JAVA_HOME%\\bin)</li><li>配置 Classpath：配置字节码文件所在地址（<strong>JDK5 之后，会自动寻找当前目录下的字节码文件，因此不再需要配置</strong>）</li></ol><h2 id="java-程序编写与执行" tabindex="-1"><a class="header-anchor" href="#java-程序编写与执行" aria-hidden="true">#</a> Java 程序编写与执行</h2><h3 id="helloworld" tabindex="-1"><a class="header-anchor" href="#helloworld" aria-hidden="true">#</a> HelloWorld</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//创建一个类，类名称是HelloWorld</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorld</span> <span class="token punctuation">{</span>
    <span class="token comment">//程序的入口，main函数，main方法</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//系统输出，在命令窗口(控制台)打印一行文本</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;不积小流无以成江海，不积跬步无以至千里&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>语法：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>类的定义{

    入口的声明(){
        //执行体
    }

}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="java-程序运行原理" tabindex="-1"><a class="header-anchor" href="#java-程序运行原理" aria-hidden="true">#</a> Java 程序运行原理</h3><p>java 是一门高级语言；是一门跨平台的语言(一次编写，运行在任何支持 JVM 的操作系统中：windows,mac,linux)，集编译和解释为一体，任何一个 java 文件在执行前都需要经过一个编译的过程，然后再通过 JVM 执行.</p><p><img src="`+d+`" alt="1603778806166"></p><ol><li><p>先将 Java 源文件（*.java）编译为字节码文件（*.class）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>javac HelloWorld.java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>通过 jvm 运行字节码文件（*.class）</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>java <span class="token class-name">HelloWorld</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><blockquote><p>常见的 windows 命令</p><ol><li>进入指定盘符（进入 d 盘）</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>d:
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>进入当前盘符的根目录</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> <span class="token punctuation">\\</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>列出当前目录下所有资源</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">dir</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4"><li>进入指定目录</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> 目录名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><code>.</code>表示当前目录</p><p><code>..</code>表示上一级目录</p></blockquote></blockquote><h3 id="代码编写基本规范" tabindex="-1"><a class="header-anchor" href="#代码编写基本规范" aria-hidden="true">#</a> 代码编写基本规范</h3><ol><li>Java 程序的最基本单元是 class</li><li>一个 java 文件中只能存在一个 public class</li><li>文件名称必须和公共的类名称保持一致(包括大小写)</li><li>括号成对出现</li><li>开始花括号之前保留一个空格</li><li>左大括号开始之后的代码，保持缩进(一般 4 个空格)</li><li>一行语句结束之后使用<code>;</code>(<strong>英文半角</strong>)</li></ol><h2 id="java-基础语法" tabindex="-1"><a class="header-anchor" href="#java-基础语法" aria-hidden="true">#</a> Java 基础语法</h2><h3 id="注释" tabindex="-1"><a class="header-anchor" href="#注释" aria-hidden="true">#</a> 注释</h3><p>注释即对代码的解释，Java 中的注释一共包含三种方式:</p><ol><li><p>单行注释</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//单行注释，改行代码用于对以下语句解释，不会被编译器编译</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;helloWorld&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>多行注释</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">/*
	多行注释，当一行注释编写不下时，
	换行继续进行代码解释
*/</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a <span class="token operator">&gt;</span> b <span class="token operator">?</span> a <span class="token operator">:</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>文档注释</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
* 比较两个数的大小，返回较大的一个
* <span class="token keyword">@param</span> <span class="token parameter">a</span> 第一个整数
* <span class="token keyword">@param</span> <span class="token parameter">b</span> 第二个整数
* return 返回两数中较大的一个
*/</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> a <span class="token operator">&gt;</span> b <span class="token operator">?</span> a <span class="token operator">:</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>文档注释可以基于<code>javadoc</code>命令生成 API 文档，用于提供对代码的文档解释，常见于公司内部的工具项目，或者开源项目,使用命令如下:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>javadoc <span class="token parameter variable">-d</span> api HelloWorld.java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><code>javadoc</code> 表示生成文档</p><p><code>-d api</code> 表示在当前目录下创建 api 目录</p><p><code>HelloWorld.java</code> 需要生成文档的源代码文件</p></blockquote></li></ol><h3 id="集成开发环境" tabindex="-1"><a class="header-anchor" href="#集成开发环境" aria-hidden="true">#</a> 集成开发环境</h3><p>java 程序开发的工具选择，分为两种类别：1.文本编辑器，2.集成开发环境</p><h4 id="文本编辑器" tabindex="-1"><a class="header-anchor" href="#文本编辑器" aria-hidden="true">#</a> 文本编辑器</h4><ul><li>记事本</li><li>editplus</li><li>notepad++</li><li>sublimeText</li><li>VSCode</li></ul><h4 id="集成开发环境-ide-all-in-one" tabindex="-1"><a class="header-anchor" href="#集成开发环境-ide-all-in-one" aria-hidden="true">#</a> 集成开发环境(IDE - All in one)</h4><ul><li><strong>Eclipse</strong><ul><li>安装版</li><li><strong>解压缩版</strong></li></ul></li><li>MyEclipse</li><li>Netbeans</li><li>JCreator</li><li>JBuilder</li><li><strong>InteillJ IDEA</strong><ul><li>社区版(免费)</li><li><strong>旗舰版(收费)</strong></li></ul></li></ul><h5 id="eclipse-基本使用" tabindex="-1"><a class="header-anchor" href="#eclipse-基本使用" aria-hidden="true">#</a> Eclipse 基本使用</h5><p><img src="`+r+'" alt="1603785180159"></p><p><img src="'+u+'" alt="1603785486863"></p><h3 id="关键字-标识符" tabindex="-1"><a class="header-anchor" href="#关键字-标识符" aria-hidden="true">#</a> 关键字&amp;标识符</h3><h4 id="关键字-keyword" tabindex="-1"><a class="header-anchor" href="#关键字-keyword" aria-hidden="true">#</a> 关键字（keyword）</h4><p>​ Java 中包含一系列用作于特殊用途的英文单词，比如，定义一个类使用：<code>class</code>;声明一个方法没有返回值类型使用：<code>void</code>；定义一个软件包使用：<code>package</code>；<strong>所有的英文单词都是小写的</strong>；以上这些在 Java 中都称之为关键字。Java 中包含的所有关键字如下:</p><p><img src="'+v+`" alt="1603786711418"></p><blockquote><p><strong>null</strong>,<strong>true</strong>,<strong>false</strong>:严格意义上属于值，不包含在关键字范畴</p><p><strong>goto</strong>和<strong>const</strong>在 Java 中作为保留关键字，不允许使用</p></blockquote><h4 id="标识符-identifier" tabindex="-1"><a class="header-anchor" href="#标识符-identifier" aria-hidden="true">#</a> 标识符（identifier）</h4><p>Java 中除关键字以外，凡是由程序自己命名的元素都称之为标识符;java 中可以由程序自己命名的元素包含以下：</p><ol><li>包名称</li><li>类名称</li><li>变量名</li><li>方法名</li></ol><h5 id="标识符命名规范" tabindex="-1"><a class="header-anchor" href="#标识符命名规范" aria-hidden="true">#</a> 标识符命名规范</h5><ol><li>标识符命名必须遵循见名知义</li><li>尽量使用英文单词(拼音)作为标识符名称</li><li>标识符严格区分大小写</li><li><strong>包名称建议全部使用小写英文单词</strong></li><li><strong>类名称使用驼峰式(大驼峰)写法，首字符大写，如果是多个单词组合而成，每个单词的首字符都大写，中间不能留空格</strong></li><li><strong>变量名和方法名使用驼峰式(小驼峰)写法，首字符小写，如果由多个单词组合而成，除第一个单词外，其余的每个单词首字符大写</strong></li></ol><h5 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项" aria-hidden="true">#</a> 注意事项</h5><ol><li>标识符中不能出现除_和“$” 之外的其他任何特殊符号 (&quot;$&quot;,&quot;_&quot;可以出现在标识符的任意位置)</li><li>数字只能出现在中间和末尾,不能在开头.</li><li>空格不能出现在标识符之间</li><li>关键字不能作为标识符名称</li><li>不要使用 JDK 中内置的类名称作为标识符名称，可能会导致不可预料的后果</li><li>不要使用中文作为标识符名称</li></ol><h3 id="变量入门-variables" tabindex="-1"><a class="header-anchor" href="#变量入门-variables" aria-hidden="true">#</a> 变量入门（variables）</h3><p>java 中数据的呈现方式分为两种形式：</p><ol><li><p>常量（不可改变的数据值）</p><p>常量在 Java 中一般用于表示某一个特定值，而且该值一旦使用则无法改变，因此称之为<strong>常量</strong></p><ol><li><p>直接量</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;helloworld&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//字符串直接量</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//整型直接量</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">3.14</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//浮点型直接量</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token char">&#39;中&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//字符直接量</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//布尔类型直接量</span>
<span class="token comment">//		System.out.println(null); //null对象直接量</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>自定义常量</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">GAME_NAME</span> <span class="token operator">=</span> <span class="token string">&quot;CXK 打篮球？or 打飞机？&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol></li><li><p>变量（可以更改的数据）</p><p>编程语言中用于描述数据的最基本的单元称之为变量；变量的定义实际就是在向 JVM 申请内存空间；变量的定义语法：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>数据类型 变量名称 [= 初始值]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token string">&quot;helloworld&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">double</span> d <span class="token operator">=</span> <span class="token number">3.14</span><span class="token punctuation">;</span>
<span class="token keyword">boolean</span> b <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="变量的使用位置" tabindex="-1"><a class="header-anchor" href="#变量的使用位置" aria-hidden="true">#</a> 变量的使用位置</h4><p>变量的定义可以在一个 Java 程序的多个位置出现：</p><ol><li>类结构中直接定义</li><li>方法的参数中定义</li><li>方法结构体中定义</li><li>其他语句块(分支，循环，游离块，构造器)</li></ol><p>根据变量的定义位置不同，称呼也存在区别，Java 中的变量分为两种：</p><ol><li><p>全局变量</p><p><strong>类结构中直接定义的变量称之为全局变量</strong></p></li><li><p>局部变量</p><p><strong>除类结构之外，其他任何地方定义的变量都称之为局部变量</strong></p></li></ol><blockquote><p>Java 中局部变量和成员变量分别存储在哪个区域？</p><p><img src="`+h+'" alt="1603791187660"></p></blockquote></li></ol>',67);function j(f,J){const s=t("router-link");return o(),p("div",null,[m,a("nav",b,[a("ul",null,[a("li",null,[e(s,{to:"#java-概述"},{default:l(()=>[n("Java 概述")]),_:1}),a("ul",null,[a("li",null,[e(s,{to:"#java-是什么"},{default:l(()=>[n("Java 是什么？")]),_:1})]),a("li",null,[e(s,{to:"#java-可以做什么"},{default:l(()=>[n("Java 可以做什么？")]),_:1})]),a("li",null,[e(s,{to:"#java-的发展史"},{default:l(()=>[n("Java 的发展史？")]),_:1})]),a("li",null,[e(s,{to:"#java-的学习路线"},{default:l(()=>[n("Java 的学习路线？")]),_:1})])])]),a("li",null,[e(s,{to:"#开发环境配置"},{default:l(()=>[n("开发环境配置")]),_:1}),a("ul",null,[a("li",null,[e(s,{to:"#安装-jdk-jre"},{default:l(()=>[n("安装 JDK&JRE")]),_:1})]),a("li",null,[e(s,{to:"#环境变量配置"},{default:l(()=>[n("环境变量配置")]),_:1})])])]),a("li",null,[e(s,{to:"#java-程序编写与执行"},{default:l(()=>[n("Java 程序编写与执行")]),_:1}),a("ul",null,[a("li",null,[e(s,{to:"#helloworld"},{default:l(()=>[n("HelloWorld")]),_:1})]),a("li",null,[e(s,{to:"#java-程序运行原理"},{default:l(()=>[n("Java 程序运行原理")]),_:1})]),a("li",null,[e(s,{to:"#代码编写基本规范"},{default:l(()=>[n("代码编写基本规范")]),_:1})])])]),a("li",null,[e(s,{to:"#java-基础语法"},{default:l(()=>[n("Java 基础语法")]),_:1}),a("ul",null,[a("li",null,[e(s,{to:"#注释"},{default:l(()=>[n("注释")]),_:1})]),a("li",null,[e(s,{to:"#集成开发环境"},{default:l(()=>[n("集成开发环境")]),_:1})]),a("li",null,[e(s,{to:"#关键字-标识符"},{default:l(()=>[n("关键字&标识符")]),_:1})]),a("li",null,[e(s,{to:"#变量入门-variables"},{default:l(()=>[n("变量入门（variables）")]),_:1})])])])])]),g])}const _=i(k,[["render",j],["__file","index.html.vue"]]);export{_ as default};
