import{_ as e,r as o,o as c,c as l,a as n,e as t,w as p,b as s,d as i}from"./app-a153c100.js";const u="/MyBlog/assets/image-20230921173303724-12a5fa29.png",k="/MyBlog/assets/image-20230921173344004-55158f17.png",r={},d=n("h1",{id:"🦸‍♂-增强版-switch-语句",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#🦸‍♂-增强版-switch-语句","aria-hidden":"true"},"#"),s(" 🦸‍♂ 增强版 Switch 语句")],-1),m=n("hr",null,null,-1),v={class:"table-of-contents"},b=i(`<blockquote><p>今天用到 Switch 语句的时候，发现 IDEA 出现了一条标黄警告：<code>Switch语句可以替换为增强的&quot;switch&quot;</code>。于是找了一下资料发现在 JAVA12 版本之后，Switch 语句有了新的更为简易的写法，下面对二者的语法进行一个简单的对比：</p></blockquote><h2 id="原版" tabindex="-1"><a class="header-anchor" href="#原版" aria-hidden="true">#</a> 原版</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">L4_2_4</span> <span class="token punctuation">{</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Scanner</span> scan <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;请输入新员工的姓名：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> name <span class="token operator">=</span> scan<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;请输入新员工应聘的编程语言：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> language <span class="token operator">=</span> scan<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/* 旧版Switch语句只支持Java的基本数据类型，
       字符串只能转换成哈希码（hashCode）后再判断。 */</span>

    <span class="token keyword">switch</span> <span class="token punctuation">(</span>language<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token number">3254818</span><span class="token operator">:</span> <span class="token comment">//java的hashCode</span>
        <span class="token keyword">case</span> <span class="token number">2301506</span><span class="token operator">:</span> <span class="token comment">//Java的hashCode</span>
        <span class="token keyword">case</span> <span class="token number">2269730</span><span class="token operator">:</span> <span class="token comment">//JAVA的hashCode</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;员工&quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot;被分配到Java程序开发部门。&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token number">3104</span><span class="token operator">:</span> <span class="token comment">//c#的hashCode</span>
        <span class="token keyword">case</span> <span class="token number">2112</span><span class="token operator">:</span> <span class="token comment">//C#的hashCode</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;员工&quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot;被分配到C#项目维护组。&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">default</span><span class="token operator">:</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;本公司不需要&quot;</span> <span class="token operator">+</span> language <span class="token operator">+</span> <span class="token string">&quot;语言的程序开发人员。&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="增强版" tabindex="-1"><a class="header-anchor" href="#增强版" aria-hidden="true">#</a> 增强版</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">L4_2_4</span> <span class="token punctuation">{</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Scanner</span> scan <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;请输入新员工的姓名：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> name <span class="token operator">=</span> scan<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;请输入新员工应聘的编程语言：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> language <span class="token operator">=</span> scan<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">switch</span> <span class="token punctuation">(</span>language<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token string">&quot;Java&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;java&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;JAVA&quot;</span> <span class="token operator">-&gt;</span>
        <span class="token comment">//可以直接对多个字符串进行判断，不需要分行，：改为-&gt;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;员工&quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot;被分配到Java程序开发部门。&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//语句结束后不需要break跳出循环。</span>
        <span class="token keyword">case</span> <span class="token string">&quot;C#&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;c#&quot;</span> <span class="token operator">-&gt;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;员工&quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot;被分配到C#项目维护组。&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">default</span> <span class="token operator">-&gt;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;本公司不需要&quot;</span> <span class="token operator">+</span> language <span class="token operator">+</span> <span class="token string">&quot;语言的程序开发人员。&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>可见语句的简洁性提升了很多，同时更加直观</p><p>case 语句下如果需要使用不止一行的代码时，要在-&gt;后面加上{ }，使代码成块。否则会提示错误：</p><p>java: case 中存在意外语句，应为表达式、块或抛出语句</p></blockquote><h2 id="附上代码截图" tabindex="-1"><a class="header-anchor" href="#附上代码截图" aria-hidden="true">#</a> 附上代码截图</h2><h3 id="原版-1" tabindex="-1"><a class="header-anchor" href="#原版-1" aria-hidden="true">#</a> 原版</h3><p><img src="`+u+'" alt="image-20230921173303724"></p><h3 id="增强版-1" tabindex="-1"><a class="header-anchor" href="#增强版-1" aria-hidden="true">#</a> 增强版</h3><p><img src="'+k+'" alt="image-20230921173344004"></p>',11);function h(g,q){const a=o("router-link");return c(),l("div",null,[d,m,n("nav",v,[n("ul",null,[n("li",null,[t(a,{to:"#原版"},{default:p(()=>[s("原版")]),_:1})]),n("li",null,[t(a,{to:"#增强版"},{default:p(()=>[s("增强版")]),_:1})]),n("li",null,[t(a,{to:"#附上代码截图"},{default:p(()=>[s("附上代码截图")]),_:1}),n("ul",null,[n("li",null,[t(a,{to:"#原版-1"},{default:p(()=>[s("原版")]),_:1})]),n("li",null,[t(a,{to:"#增强版-1"},{default:p(()=>[s("增强版")]),_:1})])])])])]),b])}const y=e(r,[["render",h],["__file","index.html.vue"]]);export{y as default};
