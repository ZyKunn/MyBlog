import{_ as a,o as e,c as r,d as i}from"./app-a153c100.js";const d={},h=i('<h1 id="_03-盒子模型" tabindex="-1"><a class="header-anchor" href="#_03-盒子模型" aria-hidden="true">#</a> 03 - 盒子模型 💛</h1><p>蓝色的区域：元素的内容区域</p><p>padding：内边框----内容区域与 border 之间的距离</p><p>border: 边框</p><p>margin：外边框----元素与元素之间产生的距离</p><p>其中行内元素只能调整 margin-left 和 margin-right,上和下是无法调整，如果要调整行内元素的上下，那么就需要调整他父元素的 padding（内边距）</p><p>问题收集：</p><p>当块状元素添加了浮动后，他会覆盖正常没有添加浮动的块状元素（取消覆盖的方式：clear:both）清除浮动</p><p>当行内元素和块状元素在一起，都有超过一定数值的 border 厚度时，行内元素的上边框和下边框会覆盖其他元素的内容</p><p>当两个块状元素分别调整 margin-bottom 和另外一个的 margin-top 时，谁的值更大，就使用谁的外边距</p><p>一个元素的宽度=内容+padding+border+margin</p><h2 id="定位" tabindex="-1"><a class="header-anchor" href="#定位" aria-hidden="true">#</a> 定位：</h2><p>就对页面中的某个元素实现位置调整</p><h3 id="绝对定位" tabindex="-1"><a class="header-anchor" href="#绝对定位" aria-hidden="true">#</a> 绝对定位：</h3><p>​ position: absolute;</p><p>当给一个元素添加了绝对定位 css 后，如果不进行位置调整时，这个元素将在原位不动</p><p>如果需要调整位置时：top,bottom,left,right</p><h4 id="定位的参考对象" tabindex="-1"><a class="header-anchor" href="#定位的参考对象" aria-hidden="true">#</a> 定位的参考对象：</h4><p>添加了绝对定位属性后，该元素会找他的父元素，如果他的父元素没有 position 属性，那么他会找他父元素的父元素，这样逐层找，直到找到包含有 position 的某一个长辈元素，如果没有找到任何长辈元素有 position 属性，那么该元素将以 body 元素为基准进行定位调整</p><p>当元素添加了绝对定位后，该元素就脱离了标准文档流</p><h6 id="当一个元素进行了绝对定位-并且进行了位移-那么他未进行移动的时候的位置-浏览器将不会给他保留" tabindex="-1"><a class="header-anchor" href="#当一个元素进行了绝对定位-并且进行了位移-那么他未进行移动的时候的位置-浏览器将不会给他保留" aria-hidden="true">#</a> 当一个元素进行了绝对定位，并且进行了位移，那么他未进行移动的时候的位置，浏览器将不会给他保留</h6><h3 id="相对定位" tabindex="-1"><a class="header-anchor" href="#相对定位" aria-hidden="true">#</a> 相对定位：</h3><p>相对定位：position: relative;</p><p>相对定位是，相对于他自己原有的位置进行定位</p><p>相对定位的元素是没有脱离标准文档流</p><p>当一个元素添加了相对定位后，他移动之后的位置，浏览器会给他保留</p><h3 id="定位的口诀-父相子绝" tabindex="-1"><a class="header-anchor" href="#定位的口诀-父相子绝" aria-hidden="true">#</a> 定位的口诀：父相子绝</h3><h3 id="固定定位" tabindex="-1"><a class="header-anchor" href="#固定定位" aria-hidden="true">#</a> 固定定位：</h3><p>position: fixed;</p><p>将一个元素固定在页面中的某一个位置上，不管页面如果滑动，他的位置都不会改变</p><p>固定定位的元素会脱离标准文档流</p><p>固定定位是根据 body 为基准进行定位移动的</p><h2 id="页面布局" tabindex="-1"><a class="header-anchor" href="#页面布局" aria-hidden="true">#</a> 页面布局：</h2><h4 id="div-css" tabindex="-1"><a class="header-anchor" href="#div-css" aria-hidden="true">#</a> div+css</h4>',34),p=[h];function n(t,o){return e(),r("div",null,p)}const c=a(d,[["render",n],["__file","index.html.vue"]]);export{c as default};
