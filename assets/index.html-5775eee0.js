const e=JSON.parse('{"key":"v-7c039456","path":"/notes/java/02/08-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20(%E6%8A%BD%E8%B1%A1%E7%B1%BB_%E6%8E%A5%E5%8F%A3)/","title":"07 - 面向对象程序设计(抽象类&接口)🦑","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"抽象类（abstract class）","slug":"抽象类-abstract-class","link":"#抽象类-abstract-class","children":[{"level":3,"title":"抽象类基本案例","slug":"抽象类基本案例","link":"#抽象类基本案例","children":[{"level":4,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":4,"title":"特点","slug":"特点","link":"#特点","children":[]}]},{"level":3,"title":"设计模式之模板方法（Template Method）","slug":"设计模式之模板方法-template-method","link":"#设计模式之模板方法-template-method","children":[]}]},{"level":2,"title":"接口（interface）","slug":"接口-interface","link":"#接口-interface","children":[{"level":3,"title":"语法","slug":"语法-1","link":"#语法-1","children":[]},{"level":3,"title":"抽象类和接口区别","slug":"抽象类和接口区别","link":"#抽象类和接口区别","children":[]}]},{"level":2,"title":"多态详解（polymorphism）","slug":"多态详解-polymorphism","link":"#多态详解-polymorphism","children":[]}],"git":{"updatedTime":1704790855000,"contributors":[{"name":"ZyKun","email":"814342838@qq.com","commits":3}]},"filePathRelative":"notes/java/02/08-面向对象程序设计 (抽象类&接口)/README.md"}');export{e as data};
