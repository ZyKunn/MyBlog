import{_ as e,r as c,o,c as l,a as n,e as a,w as p,b as t,d as i}from"./app-a153c100.js";const u="/MyBlog/assets/1610872258160-1a3722ff.png",k="/MyBlog/assets/1610872274378-9b3443e7.png",d="/MyBlog/assets/1610872293282-9142006b.png",r="/MyBlog/assets/1610868786927-c8087edb.png",m="/MyBlog/assets/1610868996313-9e3ec453.png",v="/MyBlog/assets/1610871562834-fa47ab2b.png",b={},g=n("h1",{id:"_07-网络编程-二",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_07-网络编程-二","aria-hidden":"true"},"#"),t(" 07 - 网络编程（二） 🏄")],-1),h={class:"table-of-contents"},w=i('<h2 id="基于-tcp-的-socket-通信案例讲解" tabindex="-1"><a class="header-anchor" href="#基于-tcp-的-socket-通信案例讲解" aria-hidden="true">#</a> 基于 TCP 的 Socket 通信案例讲解</h2><h3 id="文件服务器实现" tabindex="-1"><a class="header-anchor" href="#文件服务器实现" aria-hidden="true">#</a> 文件服务器实现</h3><p><img src="'+u+'" alt="1610872258160"></p><h3 id="聊天室实现" tabindex="-1"><a class="header-anchor" href="#聊天室实现" aria-hidden="true">#</a> 聊天室实现</h3><p><img src="'+k+'" alt="1610872274378"></p><p><img src="'+d+`" alt="1610872293282"></p><h2 id="基于-udp-协议的-socket-通信" tabindex="-1"><a class="header-anchor" href="#基于-udp-协议的-socket-通信" aria-hidden="true">#</a> 基于 UDP 协议的 Socket 通信</h2><h3 id="概述" tabindex="-1"><a class="header-anchor" href="#概述" aria-hidden="true">#</a> 概述</h3><p>​ UDP(User Datagram Protocol)用户数据报协议，在这种协议之下，通信的双方之间不需要建立稳定可靠的连接，UDP 协议下没有服务端和客户端的概念，只存在发送方和接收方（发送方也可能是接收方：例如飞秋）；数据的传输模式是以<strong>报文的形式发送（TCP 基于输入输出流）</strong>；类似于快递包裹的投递，UDP 协议不保证数据发送的安全性，可能会出现数据报包丢失(丢包)，导致数据传输的卡顿，但是数据报包的偶尔丢失对于用户来说无关紧要；数据报包的到达也不一定是有序的，可能会出现后发先到；UDP 协议的使用场景十分常见：</p><p>例如:</p><ul><li>视频会议</li><li>屏幕广播</li><li>常见的端游</li></ul><blockquote><p>TCP：打电话（必须先接通，才能通话）</p><p>UDP：发快递（无需建立稳定连接）</p></blockquote><h3 id="datagramsocket-udp-网络通道" tabindex="-1"><a class="header-anchor" href="#datagramsocket-udp-网络通道" aria-hidden="true">#</a> DatagramSocket（UDP 网络通道）</h3><p>DatagramSocket 用于构建一个无连接的网络通道，通过该对象可以实现消息的发送(send)和消息的接收(receive)。</p><p><strong>常见构造器：</strong></p><ul><li>DatagramSocket()</li><li>DatagramSocket(int port)</li></ul><p>常见方法：</p><ul><li>send(DatagramPacket dp)：发送数据报包</li><li>receive(DatagramPacket dp)：接收数据存储到数据报包中</li></ul><h3 id="datagrampacket-数据报包" tabindex="-1"><a class="header-anchor" href="#datagrampacket-数据报包" aria-hidden="true">#</a> DatagramPacket（数据报包）</h3><p>DatagramPacket 用于表示数据报包，内部通过字节数组作为缓冲区存储或者接收数据.</p><p><strong>常见构造器：</strong></p><ul><li>DatagramPacket(byte[] buff,int len)</li><li>DatagramPacket(byte[] buff,int offset ,int len,InetAddress addr,int port)</li></ul><p><strong>常见方法：</strong></p><ul><li>getLength():获取数据报包裹中实际的字节长度</li></ul><h3 id="udp-通信实例" tabindex="-1"><a class="header-anchor" href="#udp-通信实例" aria-hidden="true">#</a> UDP 通信实例</h3><h4 id="发送方" tabindex="-1"><a class="header-anchor" href="#发送方" aria-hidden="true">#</a> 发送方</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Sender</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

        <span class="token comment">//创建基于UDP协议的网络通道</span>
        <span class="token class-name">DatagramSocket</span> ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DatagramSocket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//准备需要发送的消息</span>
        <span class="token class-name">String</span> msg <span class="token operator">=</span> <span class="token string">&quot;天王盖地虎，小鸡炖蘑菇!!!&quot;</span><span class="token punctuation">;</span>

        <span class="token comment">//基于需要发送的数据将数据打包成数据报包</span>
        <span class="token class-name">DatagramPacket</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DatagramPacket</span><span class="token punctuation">(</span>
                msg<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token number">0</span><span class="token punctuation">,</span>
                msg<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">,</span>
                <span class="token class-name">InetAddress</span><span class="token punctuation">.</span><span class="token function">getByName</span><span class="token punctuation">(</span><span class="token string">&quot;localhost&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
               	<span class="token number">10000</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//发送数据报包</span>
        ds<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>dp<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="接收方" tabindex="-1"><a class="header-anchor" href="#接收方" aria-hidden="true">#</a> 接收方</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Receiver</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

        <span class="token comment">//占据在指定端口创建网络通道</span>
        <span class="token class-name">DatagramSocket</span> ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DatagramSocket</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//创建字节缓冲区</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buff <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">//构建空数据报包用于接收发送方发送的数据</span>
        <span class="token class-name">DatagramPacket</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DatagramPacket</span><span class="token punctuation">(</span>buff<span class="token punctuation">,</span>buff<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">//接收数据</span>
            ds<span class="token punctuation">.</span><span class="token function">receive</span><span class="token punctuation">(</span>dp<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//将发送的文本信息转换为String</span>
            <span class="token class-name">String</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>buff<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>dp<span class="token punctuation">.</span><span class="token function">getLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> ip <span class="token operator">=</span> dp<span class="token punctuation">.</span><span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHostAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ip<span class="token operator">+</span><span class="token string">&quot;:&quot;</span><span class="token operator">+</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="udp-通信之与飞秋通信实例" tabindex="-1"><a class="header-anchor" href="#udp-通信之与飞秋通信实例" aria-hidden="true">#</a> UDP 通信之与飞秋通信实例</h3><p>飞秋的消息发送实现也是基于 UDP 协议的，如果我们熟悉飞秋消息的组织方式，即可通过编写 Java 程序向飞秋发送消息：</p><p>飞秋的消息发送协议如下:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>版本号:消息识别号:发送人昵称:发送人主机地址:命令字:消息内容
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>其中：</p><p>版本号固定为<code>1</code></p><p>消息识别号:保持唯一即可（一般使用系统时间）</p><p>发送昵称可以任意编写</p><p>发送主机地址可伪装，即任意编写</p><p>命令字：32 固定表示为消息发送</p><p>消息内容：实际需要发送到目标地址的消息内容</p><p>例如:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>1:100:刘德华:liudehua:32:hello飞秋
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FeiQUtils</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 飞秋协议版本号，默认:1
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">VERSION_CODE</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 发送人昵称
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">NICK_NAME</span> <span class="token operator">=</span> <span class="token string">&quot;SOFTEEM&quot;</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 发送人主机地址:可伪装
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">HOST_NAME</span> <span class="token operator">=</span> <span class="token string">&quot;localhost&quot;</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 命令字：32表示发送消息
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">COMM_CODE</span> <span class="token operator">=</span> <span class="token number">32</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">DatagramSocket</span> ds<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> ip<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">FeiQUtils</span><span class="token punctuation">(</span><span class="token class-name">String</span> ip<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SocketException</span> <span class="token punctuation">{</span>
        ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DatagramSocket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>ip <span class="token operator">=</span> ip<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendMsg</span><span class="token punctuation">(</span><span class="token class-name">String</span> msg<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token comment">//创建网络通道</span>
        <span class="token comment">//准备数据</span>
        <span class="token class-name">String</span> content <span class="token operator">=</span> <span class="token constant">VERSION_CODE</span> <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> <span class="token constant">NICK_NAME</span> <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> <span class="token constant">HOST_NAME</span> <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> <span class="token constant">COMM_CODE</span> <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> msg<span class="token punctuation">;</span>
        <span class="token comment">//将需要发送的数据打包成数据报包</span>
        <span class="token class-name">DatagramPacket</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DatagramPacket</span><span class="token punctuation">(</span>
            content<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;gbk&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token number">0</span><span class="token punctuation">,</span>
            content<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;gbk&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">,</span>
            <span class="token class-name">InetAddress</span><span class="token punctuation">.</span><span class="token function">getByName</span><span class="token punctuation">(</span>ip<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token number">2425</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//发送消息</span>
        ds<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>dp<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">FeiQUtils</span> utils <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FeiQUtils</span><span class="token punctuation">(</span><span class="token string">&quot;192.168.6.255&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        utils<span class="token punctuation">.</span><span class="token function">sendMsg</span><span class="token punctuation">(</span><span class="token string">&quot;hello1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        utils<span class="token punctuation">.</span><span class="token function">sendMsg</span><span class="token punctuation">(</span><span class="token string">&quot;hello2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        utils<span class="token punctuation">.</span><span class="token function">sendMsg</span><span class="token punctuation">(</span><span class="token string">&quot;hello3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        utils<span class="token punctuation">.</span><span class="token function">sendMsg</span><span class="token punctuation">(</span><span class="token string">&quot;hello4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="udp-数据广播之-multicastsocket" tabindex="-1"><a class="header-anchor" href="#udp-数据广播之-multicastsocket" aria-hidden="true">#</a> UDP 数据广播之 MulticastSocket</h3><p>在传统的互联网架构之下，一台主机需要将消息发送的多台不同的主机时 中间是经过了交换机(路由器)，如果需要进行消息的群发，此时在 TCP 协议之下，发送方需要将消息制作 N 份拷贝发给交换机，然后交换机再将这些消息分发给局域网中其他主机，这样一来，大大增加网络负担。</p><p><img src="`+r+'" alt="1610868786927"></p><p>因此，在 UDP 协议中，提供了组播功能（数据广播），使用 UDP 数据广播，只需要将消息发送一次到交换机，交换机会将消息制作 N 份拷贝，发送到位于该广播组内的所有其他主机。类似如下结构:</p><p><img src="'+m+`" alt="1610868996313"></p><p>使用 UDP 数据广播时，需要提供一个数据广播地址，该地址为 IP 地址的 D 类地址,可选范围为:<code>224.0.0.0</code>~<code>239.255.255.255</code>之间，并且广播消息的发送方和接收方需要加入该广播地址：</p><h4 id="发送广播" tabindex="-1"><a class="header-anchor" href="#发送广播" aria-hidden="true">#</a> 发送广播</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BoradcastSender</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

        <span class="token comment">//准备组播地址</span>
        <span class="token class-name">InetAddress</span> groupIP <span class="token operator">=</span> <span class="token class-name">InetAddress</span><span class="token punctuation">.</span><span class="token function">getByName</span><span class="token punctuation">(</span><span class="token string">&quot;225.6.7.8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//创建广播网络通道</span>
        <span class="token class-name">MulticastSocket</span> ms <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MulticastSocket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//为网络通道绑定组播地址</span>
        ms<span class="token punctuation">.</span><span class="token function">joinGroup</span><span class="token punctuation">(</span>groupIP<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">String</span> msg <span class="token operator">=</span> <span class="token string">&quot;今晚八点半，在村委会有大型歌舞表演，请各位村民端好小板凳准时观看！！！&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">DatagramPacket</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DatagramPacket</span><span class="token punctuation">(</span>
            msg<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token number">0</span><span class="token punctuation">,</span>
            msg<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">,</span>
            groupIP<span class="token punctuation">,</span>
            <span class="token number">9999</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//发送广播</span>
        ms<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>dp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ms<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="接收广播" tabindex="-1"><a class="header-anchor" href="#接收广播" aria-hidden="true">#</a> 接收广播</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BordercastReceiver</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token comment">//准备组播地址</span>
        <span class="token class-name">InetAddress</span> groupIP <span class="token operator">=</span> <span class="token class-name">InetAddress</span><span class="token punctuation">.</span><span class="token function">getByName</span><span class="token punctuation">(</span><span class="token string">&quot;225.6.7.8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//创建广播网络通道</span>
        <span class="token class-name">MulticastSocket</span> ms <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MulticastSocket</span><span class="token punctuation">(</span><span class="token number">9999</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//为网络通道绑定组播地址</span>
        ms<span class="token punctuation">.</span><span class="token function">joinGroup</span><span class="token punctuation">(</span>groupIP<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">//创建空数据报包</span>
        <span class="token class-name">DatagramPacket</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DatagramPacket</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span>b<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            ms<span class="token punctuation">.</span><span class="token function">receive</span><span class="token punctuation">(</span>dp<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>dp<span class="token punctuation">.</span><span class="token function">getLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>dp<span class="token punctuation">.</span><span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHostAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;广播消息：&quot;</span><span class="token operator">+</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h3><h2 id="作业" tabindex="-1"><a class="header-anchor" href="#作业" aria-hidden="true">#</a> 作业</h2><ol><li><p>基于 UDP 协议实现一个聊天室</p></li><li><p>基于 TCP/IP 协议完成一个远程登陆功能</p><p><img src="`+v+'" alt="1610871562834"></p></li></ol>',48);function y(f,D){const s=c("router-link");return o(),l("div",null,[g,n("nav",h,[n("ul",null,[n("li",null,[a(s,{to:"#基于-tcp-的-socket-通信案例讲解"},{default:p(()=>[t("基于 TCP 的 Socket 通信案例讲解")]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#文件服务器实现"},{default:p(()=>[t("文件服务器实现")]),_:1})]),n("li",null,[a(s,{to:"#聊天室实现"},{default:p(()=>[t("聊天室实现")]),_:1})])])]),n("li",null,[a(s,{to:"#基于-udp-协议的-socket-通信"},{default:p(()=>[t("基于 UDP 协议的 Socket 通信")]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#概述"},{default:p(()=>[t("概述")]),_:1})]),n("li",null,[a(s,{to:"#datagramsocket-udp-网络通道"},{default:p(()=>[t("DatagramSocket（UDP 网络通道）")]),_:1})]),n("li",null,[a(s,{to:"#datagrampacket-数据报包"},{default:p(()=>[t("DatagramPacket（数据报包）")]),_:1})]),n("li",null,[a(s,{to:"#udp-通信实例"},{default:p(()=>[t("UDP 通信实例")]),_:1})]),n("li",null,[a(s,{to:"#udp-通信之与飞秋通信实例"},{default:p(()=>[t("UDP 通信之与飞秋通信实例")]),_:1})]),n("li",null,[a(s,{to:"#udp-数据广播之-multicastsocket"},{default:p(()=>[t("UDP 数据广播之 MulticastSocket")]),_:1})]),n("li",null,[a(s,{to:"#"})])])]),n("li",null,[a(s,{to:"#作业"},{default:p(()=>[t("作业")]),_:1})])])]),w])}const P=e(b,[["render",y],["__file","index.html.vue"]]);export{P as default};
