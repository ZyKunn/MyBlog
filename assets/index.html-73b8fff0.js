import{_ as p,r as i,o as c,c as l,a as n,e,w as t,b as s,d as o}from"./app-a153c100.js";const r="/MyBlog/assets/image-20230526162708828-950a20bf.png",u="/MyBlog/assets/image-20230526162722930-a4143f8e.png",d="/MyBlog/assets/image-20230526162733873-091b9bfd.png",m="/MyBlog/assets/image-20230526162740024-5a867ecb.png",v="/MyBlog/assets/image-20230526162748635-b93cddd0.png",g="/MyBlog/assets/image-20230526162753818-d968ddd7.png",k="/MyBlog/assets/image-20230526162759571-eb6db2f1.png",b="/MyBlog/assets/image-20230526162805165-a5ee43fc.png",h="/MyBlog/assets/image-20230518012141019-4685f784.png",_="/MyBlog/assets/image-20230526162814545-9bbe2b8b.png",x="/MyBlog/assets/image-20230526162740024-5a867ecb.png",f="/MyBlog/assets/image-20230526162740024-5a867ecb.png",y="/MyBlog/assets/image-20230526162835759-d373db7a.png",w="/MyBlog/assets/image-20230526162841267-1384e7f3.png",M="/MyBlog/assets/image-20230526162845810-623cf1d7.png",B="/MyBlog/assets/image-20230526162855846-17709cda.png",j="/MyBlog/assets/image-20230526162913580-cfe52395.png",A="/MyBlog/assets/image-20230526162949082-fa8d379e.png",q="/MyBlog/assets/image-20230526163025915-f859cc3f.png",C="/MyBlog/assets/image-20230526163032509-2bed204f.png",V="/MyBlog/assets/image-20230526163038533-5b435f1c.png",F="/MyBlog/assets/image-20230526163046149-e61d5d73.png",N="/MyBlog/assets/image-20230526163208221-c0e62ccd.png",D="/MyBlog/assets/image-20230526163213795-e088d241.png",I="/MyBlog/assets/image-20230526163221936-babbf598.png",T="/MyBlog/assets/image-20230526163230151-daff61cc.png",H="/MyBlog/assets/image-20230526163240172-111134a3.png",P="/MyBlog/assets/image-20230526163246021-443e036e.png",S="/MyBlog/assets/image-20230526163345515-67ba9eff.png",$="/MyBlog/assets/image-20230526162841267-1384e7f3.png",E="/MyBlog/assets/image-20230526163412398-f8150068.png",O="/MyBlog/assets/image-20230526163417640-c0ffd379.png",G={},J=n("h1",{id:"课程发布-部署门户文档-v3-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#课程发布-部署门户文档-v3-1","aria-hidden":"true"},"#"),s(),n("strong",null,"课程发布-部署门户文档 v3.1")],-1),z={class:"table-of-contents"},L=o('<h2 id="_1-模块需求分析" tabindex="-1"><a class="header-anchor" href="#_1-模块需求分析" aria-hidden="true">#</a> <strong>1 模块需求分析</strong></h2><h3 id="_1-1-模块介绍" tabindex="-1"><a class="header-anchor" href="#_1-1-模块介绍" aria-hidden="true">#</a> <strong>1.1 模块介绍</strong></h3><p>课程信息编辑完毕即可发布课程，发布课程相当于一个确认操作，课程发布后学习者在网站可以搜索到课程，然后查看课程的详细信息，进一步选课、支付、在线学习。</p><p>下边是课程编辑与发布的整体流程：</p><p><img src="'+r+'" alt="image-20230526162708828"></p><p>为了课程内容没有违规信息、课程内容安排合理，在课程发布之前运营方会进行课程审核，审核通过后课程方可发布。</p><p>作为课程制作方即教学机构，在课程发布前通过课程预览功能可以看到课程发布后的效果，哪里的课程信息存在问题方便查看，及时修改。</p><p>下图是课程预览的效果图，也是课程正式发布后的课程详情界面：</p><p><img src="'+u+'" alt="image-20230526162722930">教学机构确认课程内容无误，提交审核，平台运营人员对课程内容审核，审核通过后教学机构人员发布课程成功。</p><p>课程发布模块共包括三块功能：</p><p>1、课程预览</p><p>2、课程审核</p><p>3、课程发布</p><h3 id="_1-2-业务流程" tabindex="-1"><a class="header-anchor" href="#_1-2-业务流程" aria-hidden="true">#</a> <strong>1.2 业务流程</strong></h3><h4 id="_1-2-1-课程预览" tabindex="-1"><a class="header-anchor" href="#_1-2-1-课程预览" aria-hidden="true">#</a> <strong>1.2.1 课程预览</strong></h4><p>1.<strong>教育机构用户</strong>在课程管理中可对该机构内所管理的课程进行检索。</p><p><img src="'+d+'" alt="image-20230526162733873"></p><p>2.点击某课程数据后的预览链接，即可对该课程进行预览，可以看到发布后的详情页面效果。</p><p>下图是课程详情首页，显示了课程的基本信息。</p><p><img src="'+m+'" alt="image-20230526162740024"></p><p>点击课程目录，显示课程计划，通过此界面去核实课程计划的信息是否存在问题。</p><p><img src="'+v+'" alt="image-20230526162748635"></p><p>点击课程目录中的具体章节，查看视频播放是否正常</p><p><img src="'+g+'" alt="image-20230526162753818"></p><h4 id="_1-2-2-课程审核" tabindex="-1"><a class="header-anchor" href="#_1-2-2-课程审核" aria-hidden="true">#</a> <strong>1.2.2 课程审核</strong></h4><p>教学机构提交课程审核后，平台运营人员登录运营平台进行课程审核，课程审核包括程序自动审核和人工审核，程序会审核内容的完整性，人员通过课程预览进行审核。</p><p>流程如下：</p><p><img src="'+k+'" alt="image-20230526162759571"></p><p>1、首先查询待审核的记录。</p><p>2、课程审核</p><p>具体审核的过程与课程预览的过程类似，运营人员查看课程信息、课程视频等内容。</p><p>如果存在问题则审核不通过，并附上审核不通过的原因供教学机构人员查看。</p><p>如果课程内容没有违规信息且课程内容全面则审核通过。</p><p>课程审核通过后教学机构发布课程成功。</p><h4 id="_1-2-3-课程发布" tabindex="-1"><a class="header-anchor" href="#_1-2-3-课程发布" aria-hidden="true">#</a> <strong>1.2.3 课程发布</strong></h4><p>1.<strong>教育机构用户</strong>在课程管理中可对机构内课程进行检索。</p><p><img src="'+b+'" alt="image-20230526162805165"></p><p>2.点击某课程数据后的 发布 链接（审核状态为通过），即可对该课程进行发布。</p><p><img src="'+h+'" alt="image-20230526162809120"></p><p>3、课程发布后可通过课程搜索查询到课程信息，并查看课程的详细信息。</p><p><img src="'+_+'" alt="image-20230526162814545"></p><p>4 点击课程搜索页中课程列表的某个课程，可进入课程详情页。</p><p><img src="'+x+'" alt="image-20230526162820645"></p><h2 id="_2-课程预览" tabindex="-1"><a class="header-anchor" href="#_2-课程预览" aria-hidden="true">#</a> <strong>2 课程预览</strong></h2><h3 id="_2-1-需求分析" tabindex="-1"><a class="header-anchor" href="#_2-1-需求分析" aria-hidden="true">#</a> <strong>2.1 需求分析</strong></h3><p>课程预览就是把课程的相关信息进行整合，在课程详情界面进行展示，通过课程预览页面查看信息是否存在问题。</p><p><img src="'+f+'" alt="image-20230526162828588"></p><p>下图是课程预览的数据来源：</p><p><img src="'+y+'" alt="image-20230526162835759"></p><p>在课程预览页面点击&quot;视频播放图片&quot;打开视频播放页面，通过视频播放页面查看课程计划对应的视频是否存在问题。</p><p><img src="'+w+'" alt="image-20230526162841267"></p><p>课程预览的效果与最终课程发布后查看到的效果是一致的，所以课程预览时会通过网站门户域名地址进行预览，下图显示了整个课程预览的流程图：</p><p><img src="'+M+'" alt="image-20230526162845810"></p><p>说明如下：</p><p>1、点击课程预览，通过 Nginx、后台服务网关请求内容管理服务进行课程预览。</p><p>2、内容管理服务查询课程相关信息进行整合，并通过模板引擎技术在服务端渲染生成页面，返回给浏览器。</p><p>3、通过课程预览页面点击”马上学习“打开视频播放页面。</p><p>4、视频播放页面通过 Nginx 请求后台服务网关，查询课程信息展示课程计划目录，请求媒资服务查询课程计划绑定的视频文件地址，在线浏览播放视频。</p><p><strong>2.2 模板引擎</strong></p><h4 id="_2-2-1-什么是模板引擎" tabindex="-1"><a class="header-anchor" href="#_2-2-1-什么是模板引擎" aria-hidden="true">#</a> <strong>2.2.1 什么是模板引擎</strong></h4><p>根据前边的数据模型分析，课程预览就是把课程的相关信息进行整合，在课程预览界面进行展示，课程预览界面与课程发布的课程详情界面一致。</p><p>项目采用模板引擎技术实现课程预览界面。什么是模板引擎？</p><p>早期我们采用的 jsp 技术就是一种模板引擎技术，如下图：</p><p><img src="'+B+`" alt="image-20230526162855846"></p><p>1、浏览器请求 web 服务器</p><p>2、服务器渲染页面，渲染的过程就是向 jsp 页面(模板)内填充数据(模型)。</p><p>3、服务器将渲染生成的页面返回给浏览器。</p><p>所以模板引擎就是：模板+数据=输出，Jsp 页面就是模板，页面中嵌入的 jsp 标签就是数据，两者相结合输出 html 网页。</p><p>常用的 java 模板引擎还有哪些？</p><p>Jsp、Freemarker、Thymeleaf 、Velocity 等。</p><p>本项目采用 Freemarker 作为模板引擎技术。</p><p>Freemarker 官方地址：http://freemarker.foofun.cn/</p><p>FreeMarker 是一款 <em>模板引擎</em>： 即一种基于模板和要改变的数据， 并用来生成输出文本(HTML 网页，电子邮件，配置文件，源代码等)的通用工具。 它不是面向最终用户的，而是一个 Java 类库，是一款程序员可以嵌入他们所开发产品的组件。FreeMarker 是 免费的， 基于 Apache 许可证 2.0 版本发布。</p><h4 id="_2-2-2-freemarker-快速入门" tabindex="-1"><a class="header-anchor" href="#_2-2-2-freemarker-快速入门" aria-hidden="true">#</a> <strong>2.2.2 Freemarker 快速入门</strong></h4><p>下边在内容管理接口层搭建 Freemarker 的运行环境并进行测试。</p><p>在内容管理接口工层 添加 Freemarker 与 SpringBoot 的整合包</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- Spring Boot 对结果视图 Freemarker 集成 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-freemarker<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 nacos 为内容管理接口层配置 freemarker，公用配置组新加一个 freemarker-config-dev.yaml</p><p><img src="`+j+`" alt="image-20230526162913580"></p><p>配置信息如下：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">freemarker</span><span class="token punctuation">:</span>
    <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">cache</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment">#关闭模板缓存，方便测试</span>
    <span class="token key atrule">settings</span><span class="token punctuation">:</span>
      <span class="token key atrule">template_update_delay</span><span class="token punctuation">:</span> <span class="token number">0</span>
    <span class="token key atrule">suffix</span><span class="token punctuation">:</span> .ftl <span class="token comment">#页面模板后缀名</span>
    <span class="token key atrule">charset</span><span class="token punctuation">:</span> UTF<span class="token punctuation">-</span><span class="token number">8</span>
    <span class="token key atrule">template-loader-path</span><span class="token punctuation">:</span> classpath<span class="token punctuation">:</span>/templates/ <span class="token comment">#页面模板位置(默认为 classpath:/templates/)</span>
    <span class="token key atrule">resources</span><span class="token punctuation">:</span>
      <span class="token key atrule">add-mappings</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment">#关闭项目中的静态资源映射(static、resources文件夹下的资源)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在内容管理接口工程添加 freemarker-config-dev.yaml</p><p><img src="`+A+`" alt="image-20230526162949082"></p><p>添加模板，在 resources 下创建 templates 目录，添加 test.ftl 模板文件</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>utf-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Hello World!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    Hello \${name}!
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编写 controller 方法，准备模型数据</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>xuecheng<span class="token punctuation">.</span>content<span class="token punctuation">.</span>api</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bouncycastle<span class="token punctuation">.</span>math<span class="token punctuation">.</span>raw<span class="token punctuation">.</span></span><span class="token class-name">Mod</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ModelAndView</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> Mr.M
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@description</span> freemarker测试
 * <span class="token keyword">@date</span> 2022/9/15 19:20
 */</span>
<span class="token annotation punctuation">@Controller</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FreemarkerController</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/testfreemarker&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">ModelAndView</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">ModelAndView</span> modelAndView <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ModelAndView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//设置模型数据</span>
        modelAndView<span class="token punctuation">.</span><span class="token function">addObject</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;小明&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//设置模板名称</span>
        modelAndView<span class="token punctuation">.</span><span class="token function">setViewName</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> modelAndView<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动内容管理接口工程，访问 http://localhost:63040/content/testfreemarker</p><p>屏幕输出：Hello 小明！</p><p><img src="`+q+'" alt="image-20230526163025915"></p><p>freemarker 提供很多指令用于解析各种类型的数据模型，参考地址：http://freemarker.foofun.cn/ref_directives.html</p><h3 id="_2-3-测试静态页面" tabindex="-1"><a class="header-anchor" href="#_2-3-测试静态页面" aria-hidden="true">#</a> <strong>2.3 测试静态页面</strong></h3><h4 id="_2-3-1-部署网站门户" tabindex="-1"><a class="header-anchor" href="#_2-3-1-部署网站门户" aria-hidden="true">#</a> <strong>2.3.1 部署网站门户</strong></h4><p>在课程预览界面上要加载 css、js、图片等内容，这里部署 nginx 来访问这些静态资源，对于 SpringBoot 服务的动态资源由 Nginx 去代理请求，如下图：</p><p><img src="'+C+'" alt="image-20230526163032509"></p><p>1、在本机安装 Nginx ，从课程资料目录获取 nginx-1.23.1.zip 并解压。</p><p>2、运行 nginx-1.23.1 目录下的 nginx.exe。</p><p>默认端口为 80，如果本机 80 端口被占用，则需要杀掉占用进程后再启动 nginx。</p><p>如果无法杀掉 80 端口占用进程则需要修改 nginx-1.23.1 目录下 conf/nginx.conf 配置文件</p><p><img src="'+V+'" alt="image-20230526163038533"></p><p>将 80 端口修改为空闲端口。</p><p>启动 nginx，访问 http://localhost 出现下边的网页表示启动成功</p><p><img src="'+F+`" alt="image-20230526163046149"></p><p>下边开始部署前端工程：</p><p>1、从课程资料目录获取 xc-ui-pc-static-portal.zip 并解压。</p><p>2、修改本机 hosts 文件，加入 127.0.0.1 www.51xuecheng.cn 51xuecheng.cn ucenter.51xuecheng.cn teacher.51xuecheng.cn file.51xuecheng.cn。</p><p>window10 操作系统 hosts 文件在 C:\\Windows\\System32\\drivers\\etc 下</p><p>Centos7 操作系统的 hosts 文件在/etc 目录下。</p><p>在 hosts 文件加入如下配置</p><div class="language-tex line-numbers-mode" data-ext="tex"><pre class="language-tex"><code>127.0.0.1 www.51xuecheng.cn 51xuecheng.cn ucenter.51xuecheng.cn teacher.51xuecheng.cn file.51xuecheng.cn

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>3、在 nginx-1.23.1 目录中找到 conf 目录，配置目录下的 nginx.conf 文件。</p><p>配置内容如下，注意更改成自己电脑 xc-ui-pc-static-portal 目录的路径：</p><div class="language-tex line-numbers-mode" data-ext="tex"><pre class="language-tex"><code>server <span class="token punctuation">{</span>
        listen       80;
        server_name  www.51xuecheng.cn localhost;
        #rewrite ^(.*) https://<span class="token equation string">$server_name$</span>1 permanent;
        #charset koi8-r;
        ssi on;
        ssi_silent_errors on;
        #access_log  logs/host.access.log  main;

        location / <span class="token punctuation">{</span>
            alias   D:/itcast2022/xc_edu3.0/code_1/xc-ui-pc-static-portal/;
            index  index.html index.htm;
        <span class="token punctuation">}</span>
        #静态资源
        location /static/img/ <span class="token punctuation">{</span>
                alias  D:/itcast2022/xc_edu3.0/code_1/xc-ui-pc-static-portal/img/;
        <span class="token punctuation">}</span>
        location /static/css/ <span class="token punctuation">{</span>
                alias   D:/itcast2022/xc_edu3.0/code_1/xc-ui-pc-static-portal/css/;
        <span class="token punctuation">}</span>
        location /static/js/ <span class="token punctuation">{</span>
                alias   D:/itcast2022/xc_edu3.0/code_1/xc-ui-pc-static-portal/js/;
        <span class="token punctuation">}</span>
        location /static/plugins/ <span class="token punctuation">{</span>
                alias   D:/itcast2022/xc_edu3.0/code_1/xc-ui-pc-static-portal/plugins/;
                add_header Access-Control-Allow-Origin http://ucenter.51xuecheng.cn;
                add_header Access-Control-Allow-Credentials true;
                add_header Access-Control-Allow-Methods GET;
        <span class="token punctuation">}</span>
        location /plugins/ <span class="token punctuation">{</span>
                alias   D:/itcast2022/xc_edu3.0/code_1/xc-ui-pc-static-portal/plugins/;
        <span class="token punctuation">}</span>



        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html <span class="token punctuation">{</span>
            root   html;
        <span class="token punctuation">}</span>

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ <span class="token function selector">\\.</span>php<span class="token equation string">$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ <span class="token equation-command regex">\\.</span>php$</span> <span class="token punctuation">{</span>
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #<span class="token punctuation">}</span>

        # deny access to .htaccess files, if Apache&#39;s document root
        # concurs with nginx&#39;s one
        #
        #location ~ /<span class="token function selector">\\.</span>ht <span class="token punctuation">{</span>
        #    deny  all;
        #<span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动 nginx:</p><p>进入任务管理器，杀死 nginx 的两个进程</p><p><img src="`+N+'" alt="image-20230526163208221"></p><p>杀死后再次双击 nginx.exe。</p><p>启动成功在任务管理器会出现 nginx 的进程。</p><p>日志文件在 nginx 安装目录下的 logs 目录：</p><p><img src="'+D+'" alt="image-20230526163213795"></p><p>启动成功访问http://www.51xuecheng.cn</p><p><img src="'+I+'" alt="image-20230526163221936"></p><h4 id="_2-3-2-课程详情页面" tabindex="-1"><a class="header-anchor" href="#_2-3-2-课程详情页面" aria-hidden="true">#</a> <strong>2.3.2 课程详情页面</strong></h4><p>course_template.html 是一个静态 html 页面，里边还没有添加 freemarker 标签，如果要预览该页面需要借助 Nginx 进行预览，因为页面需要加载一些 css 样式表、图片等内容。</p><p>course_template.html 文件在 xc-ui-pc-static-portal\\course 目录下</p><p><img src="'+T+'" alt="image-20230526163230151"></p><p>通过浏览器访问：http://www.51xuecheng.cn/course/course_template.html</p><p>效果如下：</p><p><img src="'+H+'" alt="image-20230526163240172"></p><p>出现这个画面说明模板文件正常浏览是没有问题的。</p><h4 id="_2-3-3-文件服务器" tabindex="-1"><a class="header-anchor" href="#_2-3-3-文件服务器" aria-hidden="true">#</a> <strong>2.3.3 文件服务器</strong></h4><p>在进行课程预览时需要展示课程的图片，在线插放课程视频，课程图片、视频这些都在 MinIO 文件系统存储，下边统一由 Nginx 代理，通过文件服务域名统一访问。如下图：</p><p><img src="'+P+`" alt="image-20230526163246021"></p><p>在 hosts 文件配置如下内容，如果已存在不要重复配置。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span> www<span class="token punctuation">.</span><span class="token number">51</span>xuecheng<span class="token punctuation">.</span>cn file<span class="token punctuation">.</span><span class="token number">51</span>xuecheng<span class="token punctuation">.</span>cn

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在 nginx.conf 中配置文件服务器的代理地址</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>   #文件服务
  upstream fileserver<span class="token punctuation">{</span>
    server <span class="token number">192.168</span><span class="token number">.101</span><span class="token number">.65</span><span class="token operator">:</span><span class="token number">9000</span> weight<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
   server <span class="token punctuation">{</span>
        listen       <span class="token number">80</span><span class="token punctuation">;</span>
        server_name  file<span class="token punctuation">.</span><span class="token number">51</span>xuecheng<span class="token punctuation">.</span>cn<span class="token punctuation">;</span>
        #charset koi8<span class="token operator">-</span>r<span class="token punctuation">;</span>
        ssi on<span class="token punctuation">;</span>
        ssi_silent_errors on<span class="token punctuation">;</span>
        #access_log  logs<span class="token operator">/</span>host<span class="token punctuation">.</span>access<span class="token punctuation">.</span>log  main<span class="token punctuation">;</span>
        location <span class="token operator">/</span>video <span class="token punctuation">{</span>
            proxy_pass   http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>fileserver<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        location <span class="token operator">/</span>mediafiles <span class="token punctuation">{</span>
            proxy_pass   http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>fileserver<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置完毕，重新加载 nginx 配置文件。</p><p>通过 cmd 进入 nginx.exe 所在目录,运行如下命令</p><div class="language-tex line-numbers-mode" data-ext="tex"><pre class="language-tex"><code>nginx.exe -s reload

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>通过http://file.51xuecheng.cn/mediafiles/图片文件地址 访问图片</p><p>在媒资数据库的文件表中找一个图片的地址进行测试。</p><h4 id="_2-3-4-视频播放页面" tabindex="-1"><a class="header-anchor" href="#_2-3-4-视频播放页面" aria-hidden="true">#</a> <strong>2.3.4 视频播放页面</strong></h4><p>进入课程详情页面，点击马上学习或课程目录下的小节的名称将打开视频播放页面。</p><p><img src="`+S+`" alt="image-20230526163345515"></p><p>首先在 nginx.conf 中配置视频播放页面的地址</p><div class="language-tex line-numbers-mode" data-ext="tex"><pre class="language-tex"><code>    location /course/preview/learning.html <span class="token punctuation">{</span>
            alias D:/itcast2022/xc_edu3.0/code_1/xc-ui-pc-static-portal/course/learning.html;
    <span class="token punctuation">}</span>
    location /course/search.html <span class="token punctuation">{</span>
            root   D:/itcast2022/xc_edu3.0/code_1/xc-ui-pc-static-portal;
    <span class="token punctuation">}</span>
    location /course/learning.html <span class="token punctuation">{</span>
            root   D:/itcast2022/xc_edu3.0/code_1/xc-ui-pc-static-portal;
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>加载 nginx 配置文件</p><p>点击课程详情页面上的视频播放链接，打开视频播放页面，如下图：</p><p><img src="`+$+'" alt="image-20230526163407710"></p><p>下边需要配置 learning.html 页面的视频播放路径来测试视频播放页面，找到 learning.html 页面中 videoObject 对象的定义处，配置视频的播放地址。</p><p><img src="'+E+'" alt="image-20230526163412398"></p><p>配置完成，刷新页面，观察视频是否可以正常播放。</p><p><img src="'+O+'" alt="image-20230526163417640"></p><p>注意：此页面会去请求后台接口获取课程计划，这里暂时不处理，稍后在接口开发处进行处理。只要页面可以正常打开，可以播放视频就测试通过了。</p>',155);function W(R,U){const a=i("router-link");return c(),l("div",null,[J,n("nav",z,[n("ul",null,[n("li",null,[e(a,{to:"#_1-模块需求分析"},{default:t(()=>[s("1 模块需求分析")]),_:1}),n("ul",null,[n("li",null,[e(a,{to:"#_1-1-模块介绍"},{default:t(()=>[s("1.1 模块介绍")]),_:1})]),n("li",null,[e(a,{to:"#_1-2-业务流程"},{default:t(()=>[s("1.2 业务流程")]),_:1})])])]),n("li",null,[e(a,{to:"#_2-课程预览"},{default:t(()=>[s("2 课程预览")]),_:1}),n("ul",null,[n("li",null,[e(a,{to:"#_2-1-需求分析"},{default:t(()=>[s("2.1 需求分析")]),_:1})]),n("li",null,[e(a,{to:"#_2-3-测试静态页面"},{default:t(()=>[s("2.3 测试静态页面")]),_:1})])])])])]),L])}const K=p(G,[["render",W],["__file","index.html.vue"]]);export{K as default};
